Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./Uart.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./Micro2.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./Micro2.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

PasswordState       0x1               ./Micro2.o
Password            0x5               ./Micro2.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DC_Motor.o
LOAD ./Micro2.o
LOAD ./PWM.o
LOAD ./Timer1.o
LOAD ./Uart.o
LOAD ./buzzer.o
LOAD ./external_eeprom.o
LOAD ./gpio.o
LOAD ./twi.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1416
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./DC_Motor.o
 .text          0x00000092        0x0 ./Micro2.o
 .text          0x00000092        0x0 ./PWM.o
 .text          0x00000092        0x0 ./Timer1.o
 .text          0x00000092        0x0 ./Uart.o
 .text          0x00000092        0x0 ./buzzer.o
 .text          0x00000092        0x0 ./external_eeprom.o
 .text          0x00000092        0x0 ./gpio.o
 .text          0x00000092        0x0 ./twi.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DcMotor_Init
                0x00000092       0x22 ./DC_Motor.o
                0x00000092                DcMotor_Init
 .text.DcMotor_Rotate
                0x000000b4       0x8e ./DC_Motor.o
                0x000000b4                DcMotor_Rotate
 .text.main     0x00000142       0x9c ./Micro2.o
                0x00000142                main
 .text.isPasswordSet
                0x000001de       0x24 ./Micro2.o
                0x000001de                isPasswordSet
 .text.ReadPassword
                0x00000202       0x40 ./Micro2.o
                0x00000202                ReadPassword
 .text.UpdatePassword
                0x00000242       0x66 ./Micro2.o
                0x00000242                UpdatePassword
 .text.CheckPassword
                0x000002a8       0x9e ./Micro2.o
                0x000002a8                CheckPassword
 .text.Alarm    0x00000346       0x36 ./Micro2.o
                0x00000346                Alarm
 .text.OpenDoor
                0x0000037c       0x36 ./Micro2.o
                0x0000037c                OpenDoor
 .text.Alarm_Timer
                0x000003b2       0x2e ./Micro2.o
                0x000003b2                Alarm_Timer
 .text.WaitTimer
                0x000003e0       0x38 ./Micro2.o
                0x000003e0                WaitTimer
 .text.OpenDoorTimer
                0x00000418       0x62 ./Micro2.o
                0x00000418                OpenDoorTimer
 .text.PWM_Timer0_Init
                0x0000047a       0x3c ./PWM.o
                0x0000047a                PWM_Timer0_Init
 .text.Timer1_init
                0x000004b6       0x88 ./Timer1.o
                0x000004b6                Timer1_init
 .text.Timer1_deInit
                0x0000053e       0x2a ./Timer1.o
                0x0000053e                Timer1_deInit
 .text.Timer1_ovf_SetCallBack
                0x00000568       0x24 ./Timer1.o
                0x00000568                Timer1_ovf_SetCallBack
 .text.Timer1_comp_SetCallBack
                0x0000058c       0x24 ./Timer1.o
                0x0000058c                Timer1_comp_SetCallBack
 .text.__vector_7
                0x000005b0       0x66 ./Timer1.o
                0x000005b0                __vector_7
 .text.__vector_9
                0x00000616       0x66 ./Timer1.o
                0x00000616                __vector_9
 .text.UART_init
                0x0000067c      0x2d4 ./Uart.o
                0x0000067c                UART_init
 .text.UART_sendByte
                0x00000950       0x2e ./Uart.o
                0x00000950                UART_sendByte
 .text.UART_recieveByte
                0x0000097e       0x1e ./Uart.o
                0x0000097e                UART_recieveByte
 .text.UART_sendString
                0x0000099c       0x52 ./Uart.o
                0x0000099c                UART_sendString
 .text.UART_receiveString
                0x000009ee       0x86 ./Uart.o
                0x000009ee                UART_receiveString
 .text.Buzzer_init
                0x00000a74       0x18 ./buzzer.o
                0x00000a74                Buzzer_init
 .text.buzzerOn
                0x00000a8c       0x18 ./buzzer.o
                0x00000a8c                buzzerOn
 .text.buzzerOff
                0x00000aa4       0x18 ./buzzer.o
                0x00000aa4                buzzerOff
 .text.EEPROM_writeByte
                0x00000abc       0x82 ./external_eeprom.o
                0x00000abc                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000b3e       0xc0 ./external_eeprom.o
                0x00000b3e                EEPROM_readByte
 .text.GPIO_setupPinDirection
                0x00000bfe      0x1d6 ./gpio.o
                0x00000bfe                GPIO_setupPinDirection
 .text.GPIO_writePin
                0x00000dd4      0x1d6 ./gpio.o
                0x00000dd4                GPIO_writePin
 .text.GPIO_readPin
                0x00000faa      0x136 ./gpio.o
                0x00000faa                GPIO_readPin
 .text.GPIO_setupPortDirection
                0x000010e0       0x88 ./gpio.o
                0x000010e0                GPIO_setupPortDirection
 .text.GPIO_writePort
                0x00001168       0x88 ./gpio.o
                0x00001168                GPIO_writePort
 .text.GPIO_readPort
                0x000011f0       0x8a ./gpio.o
                0x000011f0                GPIO_readPort
 .text.TWI_init
                0x0000127a       0x86 ./twi.o
                0x0000127a                TWI_init
 .text.TWI_start
                0x00001300       0x20 ./twi.o
                0x00001300                TWI_start
 .text.TWI_stop
                0x00001320       0x16 ./twi.o
                0x00001320                TWI_stop
 .text.TWI_writeByte
                0x00001336       0x2e ./twi.o
                0x00001336                TWI_writeByte
 .text.TWI_readByteWithACK
                0x00001364       0x26 ./twi.o
                0x00001364                TWI_readByteWithACK
 .text.TWI_readByteWithNACK
                0x0000138a       0x26 ./twi.o
                0x0000138a                TWI_readByteWithNACK
 .text.TWI_getStatus
                0x000013b0       0x1e ./twi.o
                0x000013b0                TWI_getStatus
 .text.libgcc   0x000013ce       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x000013ce                __udivmodsi4
 .text.libgcc   0x00001412        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00001412        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001412        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00001412                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001412        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00001412                exit
                0x00001412                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001412        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00001416                _etext = .

.data           0x00800060       0x10 load address 0x00001416
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DC_Motor.o
 .data          0x00800060        0x0 ./Micro2.o
 .data          0x00800060        0x0 ./PWM.o
 .data          0x00800060        0x0 ./Timer1.o
 .data          0x00800060        0x0 ./Uart.o
 .data          0x00800060        0x0 ./buzzer.o
 .data          0x00800060        0x0 ./external_eeprom.o
 .data          0x00800060        0x0 ./gpio.o
 .data          0x00800060        0x0 ./twi.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.TIMER1_Configuration
                0x00800060        0x6 ./Micro2.o
                0x00800060                TIMER1_Configuration
 .data.UART     0x00800066        0x6 ./Micro2.o
                0x00800066                UART
 .data.TWI_Configuration
                0x0080006c        0x3 ./Micro2.o
                0x0080006c                TWI_Configuration
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800070                . = ALIGN (0x2)
 *fill*         0x0080006f        0x1 00
                0x00800070                _edata = .
                0x00800070                PROVIDE (__data_end, .)

.bss            0x00800070        0xe
                0x00800070                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800070        0x0 ./DC_Motor.o
 .bss           0x00800070        0x0 ./Micro2.o
 .bss           0x00800070        0x0 ./PWM.o
 .bss           0x00800070        0x0 ./Timer1.o
 .bss           0x00800070        0x0 ./Uart.o
 .bss           0x00800070        0x0 ./buzzer.o
 .bss           0x00800070        0x0 ./external_eeprom.o
 .bss           0x00800070        0x0 ./gpio.o
 .bss           0x00800070        0x0 ./twi.o
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800070        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.ticks     0x00800070        0x1 ./Micro2.o
                0x00800070                ticks
 .bss.MotorFlag
                0x00800071        0x1 ./Micro2.o
                0x00800071                MotorFlag
 .bss.AlarmFlag
                0x00800072        0x1 ./Micro2.o
                0x00800072                AlarmFlag
 .bss.StartMotor
                0x00800073        0x1 ./Micro2.o
                0x00800073                StartMotor
 .bss.g_callBackPtr1
                0x00800074        0x2 ./Timer1.o
 .bss.g_callBackPtr2
                0x00800076        0x2 ./Timer1.o
 *(COMMON)
 COMMON         0x00800078        0x6 ./Micro2.o
                0x00800078                PasswordState
                0x00800079                Password
                0x0080007e                PROVIDE (__bss_end, .)
                0x00001416                __data_load_start = LOADADDR (.data)
                0x00001426                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080007e        0x0
                0x0080007e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080007e                PROVIDE (__noinit_end, .)
                0x0080007e                _end = .
                0x0080007e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x246c
 *(.stab)
 .stab          0x00000000      0x2c4 ./DC_Motor.o
 .stab          0x000002c4      0x9d8 ./Micro2.o
                                0xa8c (size before relaxing)
 .stab          0x00000c9c      0x198 ./PWM.o
                                0x3d8 (size before relaxing)
 .stab          0x00000e34      0x318 ./Timer1.o
                                0x5dc (size before relaxing)
 .stab          0x0000114c      0x564 ./Uart.o
                                0x7a4 (size before relaxing)
 .stab          0x000016b0      0x180 ./buzzer.o
                                0x24c (size before relaxing)
 .stab          0x00001830      0x318 ./external_eeprom.o
                                0x3c0 (size before relaxing)
 .stab          0x00001b48      0x5e8 ./gpio.o
                                0x864 (size before relaxing)
 .stab          0x00002130      0x33c ./twi.o
                                0x594 (size before relaxing)

.stabstr        0x00000000     0x1396
 *(.stabstr)
 .stabstr       0x00000000     0x1396 ./DC_Motor.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Final_Project_MC2.elf elf32-avr)
LOAD linker stubs
